{"version":3,"sources":["redux/actions/actionsTypes.js","redux/reducers/loginReducer.js","redux/reducers/index.js","redux/actions/actions.js","redux/api/index.js","config.js","redux/sagas/loginSaga.js","redux/sagas/index.js","redux/store.js","components/Loader.jsx","pages/LandingPage.jsx","Routes/AuthRoutes.js","components/Login/Login.const.js","components/Login/Login.styles.js","components/Login/index.jsx","components/SignUp/SignUp.const.js","components/SignUp/SignUp.styles.js","components/SignUp/index.jsx","Routes/UnAuthRoutes.js","pages/HomeRoute.jsx","pages/Main.jsx","App.js","index.js"],"names":["REQUEST_LOGIN","LOGIN_SUCCESS","LOGIN_FAILURE","IS_VERIFIED","CHECK_VERIFIED","REQUEST_CREATE_PROFILE","SUCCESS_CREATE_PROFILE","FAILURE_CREATE_PROFILE","initialState","loading","errorMessage","email","status","errorStatus","auth","loginReducer","state","action","type","payload","rootReducer","combineReducers","login","loginSuccess","data","loginFailure","isVerified","successCreateProfile","failureCreateProfile","host_url","checkUser","a","username","password","axios","post","localStorage","setItem","token","id","expiry","name","Error","message","verifyUser","createProfile","error","loginWorker","verifiedWorker","createProfileWorker","loginWatcher","call","put","console","log","takeLatest","rootSaga","all","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","subscribe","getState","run","Loader","Backdrop","style","zIndex","open","CircularProgress","color","LandingPage","dispatch","useDispatch","useSelector","useEffect","Grid","container","direction","justifyContent","alignItems","marginTop","spacing","item","Typography","variant","Button","onClick","removeItem","window","location","reload","AuthRoute","createLoginInitialValues","createLoginValidations","values","errors","match","makeStyles","theme","roundedCorner","borderRadius","lockIcon","fontSize","center","textAlign","Alert","props","elevation","Login","openLogin","setOpenLogin","classes","useStyles","useState","openAlert","setOpenAlert","showPassword","setShowPassword","handleClose","event","reason","handleClickShowPassword","handleMouseDownPassword","preventDefault","justify","className","xs","md","width","initialValues","validate","onSubmit","value","formik","TextField","fullWidth","label","onChange","handleChange","touched","Boolean","helperText","InputProps","endAdornment","InputAdornment","position","IconButton","aria-label","onMouseDown","Visibility","VisibilityOff","component","sm","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","severity","createInitialValues","confirmPassword","createValidations","re","length","personIcon","SignUp","Tooltip","title","UnAuthRoute","HomeRoute","Main","setLogin","isLogin","getItem","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.422c3eb2.chunk.js","sourcesContent":["export const REQUEST_LOGIN = \"REQUEST_LOGIN\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\";\r\nexport const FAILURE_DEPLOY = \"FAILURE_DEPLOY\";\r\nexport const FAILURE_USER_DATA = \"FAILURE_USER_DATA\";\r\nexport const REQUEST_USER_DATA = \"REQUEST_USER_DATA\";\r\nexport const SUCCESS_USER_DATA = \"SUCCESS_USER_DATA\";\r\n\r\nexport const IS_VERIFIED = \"IS_VERIFIED\";\r\nexport const CHECK_VERIFIED = \"CHECK_VERIFIED\";\r\nexport const SET_FEEDBACK_SUCCESS = \"SET_FEEDBACK_SUCCESS\";\r\nexport const SET_FEEDBACK_FAILURE = \"SET_FEEDBACK_FAILURE\";\r\n\r\nexport const REQUEST_FEEDBACK = \"REQUEST_FEEDBACK\";\r\nexport const RESET_FEEDBACK = \"RESET_FEEDBACK\";\r\n\r\nexport const REQUEST_CREATE_PROFILE = \"REQUEST_CREATE_PROFILE\";\r\nexport const SUCCESS_CREATE_PROFILE = \"SUCCESS_CREATE_PROFILE\";\r\nexport const FAILURE_CREATE_PROFILE = \"FAILURE_CREATE_PROFILE\";\r\n","import {\r\n  CHECK_VERIFIED,\r\n  FAILURE_CREATE_PROFILE,\r\n  IS_VERIFIED,\r\n  LOGIN_FAILURE,\r\n  LOGIN_SUCCESS,\r\n  REQUEST_CREATE_PROFILE,\r\n  REQUEST_LOGIN,\r\n  SUCCESS_CREATE_PROFILE,\r\n} from \"../actions/actionsTypes\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  errorMessage: \"\",\r\n  email: \"\",\r\n  status:0,\r\n  errorStatus:false,\r\n  auth:''\r\n};\r\nconst loginReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case REQUEST_LOGIN: {\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        errorStatus:false,\r\n        errorMessage:''\r\n      };\r\n    }\r\n    case LOGIN_FAILURE: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        errorStatus:true,\r\n        errorMessage: action.payload,\r\n      };\r\n    }\r\n    case LOGIN_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        errorStatus:false,\r\n        errorMessage:'',\r\n        ...action.payload\r\n      };\r\n    }\r\n    case CHECK_VERIFIED:{\r\n     return {\r\n      ...state,\r\n      loading:true,\r\n     } \r\n    }\r\n    case IS_VERIFIED:{\r\n      return {\r\n        ...state,\r\n        loading:false,\r\n        ...action.payload\r\n      }\r\n    }\r\n    case REQUEST_CREATE_PROFILE:{\r\n      return {\r\n        ...state,\r\n        loading:true\r\n      }\r\n    }\r\n    case SUCCESS_CREATE_PROFILE:{\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        errorStatus:false,\r\n        errorMessage:'',\r\n        ...action.payload\r\n      }\r\n    }\r\n    case FAILURE_CREATE_PROFILE:{\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        email: '',\r\n        errorStatus:true,\r\n        errorMessage:action.payload\r\n      }\r\n    }\r\n    default:return state;\r\n  }\r\n};\r\nexport default loginReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport loginReducer from './loginReducer';\r\nconst rootReducer = combineReducers({\r\n    login:loginReducer,\r\n})\r\nexport default rootReducer","import {\r\n  CHECK_VERIFIED,\r\n  FAILURE_CREATE_PROFILE,\r\n  FAILURE_USER_DATA,\r\n  IS_VERIFIED,\r\n  LOGIN_FAILURE,\r\n  LOGIN_SUCCESS,\r\n  REQUEST_CREATE_PROFILE,\r\n  REQUEST_FEEDBACK,\r\n  REQUEST_LOGIN,\r\n  REQUEST_USER_DATA,\r\n  RESET_FEEDBACK,\r\n  SET_FEEDBACK_FAILURE,\r\n  SET_FEEDBACK_SUCCESS,\r\n  SUCCESS_CREATE_PROFILE,\r\n  SUCCESS_USER_DATA,\r\n} from \"./actionsTypes\";\r\n\r\nexport const requestUserData = () => {\r\n  return {\r\n    type: REQUEST_USER_DATA,\r\n  };\r\n};\r\nexport const successUserData = (data) => {\r\n  return {\r\n    type: SUCCESS_USER_DATA,\r\n    payload: data,\r\n  };\r\n};\r\nexport const failureUserData = (err) => {\r\n  return {\r\n    type: FAILURE_USER_DATA,\r\n    payload: err,\r\n  };\r\n};\r\n\r\nexport const requestLogin = (data) => {\r\n  return {\r\n    type: REQUEST_LOGIN,\r\n    payload: data,\r\n  };\r\n};\r\nexport const loginSuccess = (data) => {\r\n  return {\r\n    type: LOGIN_SUCCESS,\r\n    payload: data,\r\n  };\r\n};\r\nexport const loginFailure = (data) => {\r\n  return {\r\n    type: LOGIN_FAILURE,\r\n    payload: data,\r\n  };\r\n};\r\nexport const checkVerified = (data) => {\r\n  return {\r\n    type: CHECK_VERIFIED,\r\n    payload: data,\r\n  };\r\n};\r\nexport const isVerified = (data) => {\r\n  return {\r\n    type: IS_VERIFIED,\r\n    payload: data,\r\n  };\r\n};\r\nexport const requestCreateProfile = (data) => {\r\n  return {\r\n    type: REQUEST_CREATE_PROFILE,\r\n    payload: data,\r\n  };\r\n};\r\nexport const successCreateProfile = (data) => {\r\n  return {\r\n    type: SUCCESS_CREATE_PROFILE,\r\n    payload: data,\r\n  };\r\n};\r\nexport const failureCreateProfile = (data) => {\r\n  return {\r\n    type: FAILURE_CREATE_PROFILE,\r\n    payload: data,\r\n  };\r\n};\r\n","import axios from \"axios\";\r\nimport { BACK_END_URL } from \"../../config\";\r\nconst host_url = BACK_END_URL;\r\n// const host_url = \"http://localhost:5000\";\r\n\r\nconst checkUser = async ({ username, password }) => {\r\n  try {\r\n    let { data } = await axios.post(`${host_url}/api/authLogin`, {\r\n      username,\r\n      password,\r\n    });\r\n    if (data.email) {\r\n      localStorage.setItem(\"token\", data.token);\r\n      localStorage.setItem(\"email\", data.email);\r\n      localStorage.setItem(\"auth\", data.id);\r\n      return {\r\n        email: data.email,\r\n        status: data.status,\r\n        expiry: data.expiry,\r\n        auth: data.id,\r\n        name:data.name\r\n      };\r\n    } else {\r\n      throw new Error(data.message);\r\n    }\r\n  } catch (err) {\r\n    throw err;\r\n  }\r\n};\r\nconst verifyUser = async ({ token, email }) => {\r\n  try {\r\n    let { data } = await axios.post(`${host_url}/api/isVerify`, {\r\n      token,\r\n      email,\r\n    });\r\n    if (data.email) {\r\n      return data;\r\n    } else {\r\n      throw new Error(data.message);\r\n    }\r\n  } catch (err) {\r\n    throw err;\r\n  }\r\n};\r\nconst createProfile = async ({ email, username, password }) => {\r\n  try {\r\n    let { data } = await axios.post(`${host_url}/api/user`, {\r\n      email,\r\n      username,\r\n      password,\r\n    });\r\n    if (data.error) {\r\n      throw new Error(data.error);\r\n    } else {\r\n      localStorage.setItem(\"token\", data.token);\r\n      localStorage.setItem(\"email\", data.email);\r\n      return data;\r\n    }\r\n  } catch (err) {\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport { checkUser, verifyUser, createProfile };\r\n","export const BACK_END_URL = \"https://user34235.herokuapp.com\";\r\n// export const BACK_END_URL = \"http://localhost:5000\";","import { all, call, put, takeLatest } from \"@redux-saga/core/effects\";\r\nimport {\r\n  failureCreateProfile,\r\n  isVerified,\r\n  loginFailure,\r\n  loginSuccess,\r\n  successCreateProfile,\r\n  successUserData,\r\n} from \"../actions/actions\";\r\nimport {\r\n  CHECK_VERIFIED,\r\n  REQUEST_CREATE_PROFILE,\r\n  REQUEST_LOGIN,\r\n} from \"../actions/actionsTypes\";\r\nimport { checkUser, createProfile, verifyUser } from \"../api\";\r\n\r\nfunction* loginWorker(action) {\r\n  try {\r\n    const data = yield call(checkUser, action.payload);\r\n    yield put(loginSuccess(data));\r\n  } catch (err) {\r\n    console.log(err)\r\n    yield put(loginFailure(err.message));\r\n  }\r\n}\r\nfunction* verifiedWorker(action) {\r\n  try {\r\n    const data = yield call(verifyUser, action.payload);\r\n    yield put(isVerified(data));\r\n  } catch (err) {\r\n    yield put(isVerified(\"\"));\r\n  }\r\n}\r\n\r\nfunction* createProfileWorker(action) {\r\n  try {\r\n    const data = yield call(createProfile, action.payload);\r\n    yield put(successCreateProfile(data))\r\n  } catch (err) {\r\n    yield put(failureCreateProfile(err.message));\r\n  }\r\n}\r\n\r\nexport default function* loginWatcher() {\r\n  yield takeLatest(REQUEST_LOGIN, loginWorker);\r\n  yield takeLatest(CHECK_VERIFIED, verifiedWorker);\r\n  yield takeLatest(REQUEST_CREATE_PROFILE, createProfileWorker);\r\n}\r\n","import { all } from \"@redux-saga/core/effects\";\r\nimport loginWatcher from \"./loginSaga\";\r\nexport default function* rootSaga() {\r\n  yield all([loginWatcher()]);\r\n}\r\n","import { applyMiddleware, createStore } from \"redux\";\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootReducer from './reducers'\r\nimport rootSaga from \"./sagas\";\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst store = createStore(rootReducer,applyMiddleware(sagaMiddleware))\r\nconst unsubscribe  = store.subscribe(()=>console.log(\"Updated State : \",store.getState()))\r\nsagaMiddleware.run(rootSaga);\r\nexport default store;","import { Backdrop, CircularProgress } from \"@material-ui/core\";\nimport React from \"react\";\n\nconst Loader = ({ loading }) => {\n  return (\n    <>\n      <Backdrop style={{ zIndex: \"100\" }} open={loading}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n    </>\n  );\n};\nexport default Loader;","import { Button, Grid, Typography } from \"@material-ui/core\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { requestUserData } from \"../redux/actions/actions\";\r\nconst LandingPage = () => {\r\n  const dispatch = useDispatch();\r\n  const login = useSelector((state) => state.login);\r\n  useEffect(() => {\r\n    dispatch(requestUserData());\r\n  }, []);\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"email\");\r\n    window.location.reload();\r\n  };\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        style={{ marginTop: \"100px\" }}\r\n        spacing={4}\r\n      >\r\n        <>\r\n          {/* {login.status ? ( */}\r\n            <Grid item>\r\n              <Typography variant=\"h5\">Welcome {login.name}</Typography>\r\n            </Grid>\r\n          {/* ) : (\r\n            <Grid item>\r\n              <Typography variant=\"h5\">\r\n                Please open mail and verify your account\r\n              </Typography>\r\n            </Grid>\r\n          )} */}\r\n          <Grid item>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={handleLogout}>\r\n              Logout\r\n            </Button>\r\n          </Grid>\r\n        </>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LandingPage;\r\n","import LandingPage from \"../pages/LandingPage\";\r\n\r\nconst AuthRoute = () => {\r\n  return (\r\n    <>\r\n      <LandingPage/>\r\n    </>\r\n  );\r\n};\r\nexport default AuthRoute;\r\n","export const createLoginInitialValues = {\n  username: \"\",\n  password: \"\",\n};\nexport const createLoginValidations = (values) => {\n  const errors = {};\n  const email_re = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/\n  if (!values.username) {\n    errors.username = \"Required\";\n  }else if (!values.username.match(email_re)) {\n    errors.username = \"Email is invalid !\";\n  }\n\n  if (!values.password) {\n    errors.password = \"Required\";\n  }\n  return errors;\n};\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n    roundedCorner:{\n        borderRadius: \"5px\"\n    },\n    lockIcon:{\n        fontSize: \"50px\"\n    },\n    center:{\n        textAlign:\"center !important\"\n    }\n\n}))\n","import {\r\n  Button, Grid,\r\n  IconButton, InputAdornment, Snackbar,\r\n  TextField,\r\n  Tooltip\r\n} from \"@material-ui/core\";\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\r\nimport LockIcon from \"@material-ui/icons/Lock\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { Form, Formik } from \"formik\";\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { requestLogin } from \"../../redux/actions/actions\";\r\nimport {\r\n  createLoginInitialValues,\r\n  createLoginValidations\r\n} from \"./Login.const\";\r\n\r\nimport useStyles from './Login.styles';\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst Login = ({ openLogin, setOpenLogin }) => {\r\n  const classes = useStyles()\r\n  const { loading, errorMessage, errorStatus } = useSelector(\r\n    (state) => state.login\r\n  );\r\n  const dispatch = useDispatch();\r\n  const [openAlert, setOpenAlert] = useState(errorStatus);\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const handleSubmit = (value) => {\r\n    dispatch(requestLogin({ username:value.username, password:value.password }));\r\n    setOpenAlert(errorStatus);\r\n  };\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpenAlert(false);\r\n  };\r\n  const handleClickShowPassword = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        className=\"bg-light\"\r\n        id=\"login-section\"\r\n      >\r\n        <Grid\r\n          container\r\n          item\r\n          id=\"login-inner-section\"\r\n          xs={11}\r\n          md={10}\r\n          className={classes.roundedCorner}\r\n          direction=\"row\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid item xs={12} md={4} className=\"text-center p-3\">\r\n            <LockIcon className={classes.lockIcon} />\r\n            <p style={{ width: \"50%\" }} className=\"mx-auto fw-bold fs-5\">\r\n              Enter into Website\r\n            </p>\r\n          </Grid>\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            item\r\n            xs={12}\r\n            md={8}\r\n          >\r\n            <Formik\r\n              initialValues={{\r\n                ...createLoginInitialValues,\r\n              }}\r\n              validate={createLoginValidations}\r\n              onSubmit={handleSubmit}\r\n            >\r\n              {(formik) => (\r\n                <Form>\r\n                  <Grid\r\n                    container\r\n                    item\r\n                      direction=\"row\"\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                  >\r\n                    <Grid\r\n                      item\r\n                      xs={12}\r\n                      className=\"mt-5 mb-2 fs-3 text-center fw-bolder\"\r\n                    >\r\n                      Log in{\" \"}\r\n                    </Grid>\r\n                    <Grid item xs={9} className=\"my-3\">\r\n                      <TextField\r\n                        fullWidth\r\n                        id=\"login-username\"\r\n                        name=\"username\"\r\n                        label=\"Email\"\r\n                        value={formik.values.username}\r\n                        onChange={formik.handleChange}\r\n                        error={\r\n                          formik.touched.username &&\r\n                          Boolean(formik.errors.username)\r\n                        }\r\n                        helperText={\r\n                          formik.touched.username && formik.errors.username\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={9} className=\"my-3\">\r\n                      <TextField\r\n                        fullWidth\r\n                        id=\"login-password\"\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type={showPassword ? \"text\" : \"password\"}\r\n                        value={formik.values.password}\r\n                        onChange={formik.handleChange}\r\n                        error={\r\n                          formik.touched.password &&\r\n                          Boolean(formik.errors.password)\r\n                        }\r\n                        helperText={\r\n                          formik.touched.password && formik.errors.password\r\n                        }\r\n                        InputProps={{\r\n                          endAdornment: (\r\n                            <InputAdornment position=\"end\">\r\n                              <IconButton\r\n                                aria-label=\"toggle password visibility\"\r\n                                onClick={handleClickShowPassword}\r\n                                onMouseDown={handleMouseDownPassword}\r\n                              >\r\n                                {showPassword ? (\r\n                                  <Visibility />\r\n                                ) : (\r\n                                  <VisibilityOff />\r\n                                )}\r\n                              </IconButton>\r\n                            </InputAdornment>\r\n                          ),\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n                    <Grid\r\n                      container\r\n                      direction=\"row\"\r\n                      justify=\"flex-end\"\r\n                      item\r\n                      xs={9}\r\n                    >\r\n                      <Grid\r\n                        component={Button}\r\n                        className=\"fw-bold text-decoration-none\"\r\n                        item\r\n                      >Forgot Password ?\r\n                      </Grid>\r\n                    </Grid>\r\n\r\n                    <Grid\r\n                      container\r\n                      item\r\n                      direction=\"row\"\r\n                      justify=\"space-around\"\r\n                      xs={12}\r\n                      sm={9}\r\n                      className=\"my-5 text-center\"\r\n                    >\r\n                      <Grid\r\n                        component={Button}\r\n                        type=\"submit\"\r\n                        style={{ borderRadius: \"none\" }}\r\n                        item\r\n                        xs={4}\r\n                        md={3}\r\n                        className=\"login-submit-button fw-bold fs-6\"\r\n                      >\r\n                        Login\r\n                      </Grid>\r\n                      <Grid\r\n                        item\r\n                        xs={4}\r\n                        sm={3}\r\n                        component={Button}\r\n                        style={{ borderRadius: \"none\" }}\r\n                        className=\"login-register-button fw-bold fs-6\"\r\n                        onClick={() => {\r\n                          setOpenLogin(!openLogin);\r\n                        }}\r\n                      >\r\n                        Sign UP\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Snackbar\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n        open={openAlert}\r\n        autoHideDuration={4000}\r\n        onClose={handleClose}\r\n      >\r\n        <Alert onClose={handleClose} severity=\"error\">\r\n          {errorMessage}\r\n        </Alert>\r\n      </Snackbar>\r\n    </>\r\n  );\r\n};\r\nexport default Login;\r\n","export const createInitialValues = {\n  email: \"\",\n  username: \"\",\n  password: \"\",\n  confirmPassword: \"\",\n};\nexport const createValidations = (values) => {\n  const errors = {};\n  const re = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!_@#\\$%\\^&\\*])(?=.{8,})/;\n  const email_re = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/\n  if (!values.email) {\n    errors.email = \"Required\";\n  } else if (!values.email.match(email_re)) {\n    errors.email = \"Email is invalid !\";\n  }\n\n  if (!values.username) {\n    errors.username = \"Required\";\n  } else if (values.username.length < 3) {\n    errors.username = \"Name should be less than 3 latters\";\n  } else if (values.username.length > 50) {\n    errors.username = \"Name should be more than 50 latters\";\n  }\n\n  if (!values.password) {\n    errors.password = \"Required\";\n  } else if (!values.password.match(re)) {\n    errors.password = \"Password is invalid !\";\n  }\n\n  if (!values.confirmPassword) {\n    errors.confirmPassword = \"Required\";\n  } else if (!values.confirmPassword.match(re)) {\n    errors.confirmPassword = \"Confirm Password is invalid !\";\n  } else if (values.password !== values.confirmPassword) {\n    errors.confirmPassword = \"Password doesn't match !\";\n  }\n  \n  return errors;\n};\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n    roundedCorner:{\n        borderRadius: \"5px\"\n    },\n    personIcon:{\n        fontSize: \"50px\"\n    },\n    center:{\n        textAlign:\"center !important\"\n    }\n}))","import {\r\n  Button,\r\n  FormControl,\r\n  Grid,\r\n  IconButton,\r\n  Input,\r\n  InputAdornment,\r\n  InputLabel,\r\n  Snackbar,\r\n  TextField,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\r\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { requestCreateProfile } from \"../../redux/actions/actions\";\r\nimport { createInitialValues, createValidations } from \"./SignUp.const\";\r\nimport { Formik, Form } from \"formik\";\r\nimport useStyles from \"./SignUp.styles\";\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst SignUp = ({ openLogin, setOpenLogin }) => {\r\n  const { loading, errorMessage, errorStatus } = useSelector(\r\n    (state) => state.login\r\n  );\r\n  const dispatch = useDispatch();\r\n  const [openAlert, setOpenAlert] = useState(errorStatus);\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const re = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!_@#\\$%\\^&\\*])(?=.{8,})/;\r\n  const classes = useStyles();\r\n  const handleSubmit = (values) => {\r\n    dispatch(\r\n      requestCreateProfile({\r\n        email: values.email,\r\n        password: values.password,\r\n        username: values.username,\r\n      })\r\n    );\r\n    setOpenAlert(errorStatus);\r\n  };\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpenAlert(false);\r\n  };\r\n  const handleClickShowPassword = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        className=\"bg-light p-4\"\r\n        id=\"login-section\"\r\n      >\r\n        <Grid\r\n          container\r\n          item\r\n          id=\"login-inner-section\"\r\n          md={10}\r\n          className={classes.roundedCorner}\r\n          direction=\"row\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid item xs={8} md={4} className={`${classes.center} p-3`}>\r\n            <PersonAddIcon className={classes.personIcon} />\r\n            <p style={{ width: \"60%\" }} className=\"mx-auto fw-bold fs-5\">\r\n              Make your profile\r\n            </p>\r\n          </Grid>\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            item\r\n            md={8}\r\n          >\r\n            <Grid item xs={9} className=\"mt-5 mb-2 fs-3 text-center fw-bolder\">\r\n              Create Profile{\" \"}\r\n            </Grid>\r\n            <Formik\r\n              initialValues={{\r\n                ...createInitialValues,\r\n              }}\r\n              validate={createValidations}\r\n              onSubmit={handleSubmit}\r\n            >\r\n              {(formik) => (\r\n                <Form>\r\n                  <Grid\r\n                    item\r\n                    container\r\n                    direction=\"row\"\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                  >\r\n                    <Grid item xs={9} className=\"my-2\">\r\n                      <TextField\r\n                        fullWidth\r\n                        id=\"register-email\"\r\n                        name=\"email\"\r\n                        label=\"Email\"\r\n                        value={formik.values.email}\r\n                        onChange={formik.handleChange}\r\n                        error={\r\n                          formik.touched.email && Boolean(formik.errors.email)\r\n                        }\r\n                        helperText={formik.touched.email && formik.errors.email}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={9} className=\"my-2\">\r\n                      <TextField\r\n                        fullWidth\r\n                        id=\"register-name\"\r\n                        name=\"username\"\r\n                        label=\"Name\"\r\n                        value={formik.values.username}\r\n                        onChange={formik.handleChange}\r\n                        error={\r\n                          formik.touched.username &&\r\n                          Boolean(formik.errors.username)\r\n                        }\r\n                        helperText={\r\n                          formik.touched.username && formik.errors.username\r\n                        }\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={9} className=\"my-2\">\r\n                      <Tooltip title=\"Password should be min 8 digit long alphanumric,with a mixture of uppercase,lowercase,digit and special characters.\">\r\n                        <TextField\r\n                          fullWidth\r\n                          id=\"login-password\"\r\n                          name=\"password\"\r\n                          label=\"Password\"\r\n                          type={showPassword ? \"text\" : \"password\"}\r\n                          value={formik.values.password}\r\n                          onChange={formik.handleChange}\r\n                          error={\r\n                            formik.touched.password &&\r\n                            Boolean(formik.errors.password)\r\n                          }\r\n                          helperText={\r\n                            formik.touched.password && formik.errors.password\r\n                          }\r\n                          InputProps={{\r\n                            endAdornment: (\r\n                              <InputAdornment position=\"end\">\r\n                                <IconButton\r\n                                  aria-label=\"toggle password visibility\"\r\n                                  onClick={handleClickShowPassword}\r\n                                  onMouseDown={handleMouseDownPassword}\r\n                                >\r\n                                  {showPassword ? (\r\n                                    <Visibility />\r\n                                  ) : (\r\n                                    <VisibilityOff />\r\n                                  )}\r\n                                </IconButton>\r\n                              </InputAdornment>\r\n                            ),\r\n                          }}\r\n                        />\r\n                      </Tooltip>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={9} className=\"my-2\">\r\n                      <Tooltip title=\"Password should be min 8 digit long alphanumric,with a mixture of uppercase,lowercase,digit and special characters.\">\r\n                        <TextField\r\n                          fullWidth\r\n                          id=\"login-password\"\r\n                          name=\"confirmPassword\"\r\n                          label=\"Confirm Password\"\r\n                          type={showPassword ? \"text\" : \"password\"}\r\n                          value={formik.values.confirmPassword}\r\n                          onChange={formik.handleChange}\r\n                          error={\r\n                            formik.touched.confirmPassword &&\r\n                            Boolean(formik.errors.confirmPassword)\r\n                          }\r\n                          helperText={\r\n                            formik.touched.confirmPassword &&\r\n                            formik.errors.confirmPassword\r\n                          }\r\n                          InputProps={{\r\n                            endAdornment: (\r\n                              <InputAdornment position=\"end\">\r\n                                <IconButton\r\n                                  aria-label=\"toggle password visibility\"\r\n                                  onClick={handleClickShowPassword}\r\n                                  onMouseDown={handleMouseDownPassword}\r\n                                >\r\n                                  {showPassword ? (\r\n                                    <Visibility />\r\n                                  ) : (\r\n                                    <VisibilityOff />\r\n                                  )}\r\n                                </IconButton>\r\n                              </InputAdornment>\r\n                            ),\r\n                          }}\r\n                        />\r\n                      </Tooltip>\r\n                    </Grid>\r\n\r\n                    <Grid\r\n                      container\r\n                      direction=\"row\"\r\n                      justify=\"flex-end\"\r\n                      item\r\n                      xs={9}\r\n                    >\r\n                      <Grid\r\n                        component={Button}\r\n                        className=\"fw-bold text-decoration-none\"\r\n                        item\r\n                        onClick={() => setOpenLogin(!openLogin)}\r\n                      >\r\n                        Already have an Account\r\n                      </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={9} className=\"my-5 text-center\">\r\n                      <Button\r\n                        type=\"submit\"\r\n                        style={{ borderRadius: \"none\" }}\r\n                        className=\"login-submit-button fw-bold py-2 fs-6\"\r\n                      >\r\n                        Create Profile\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Snackbar\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n        open={openAlert}\r\n        autoHideDuration={4000}\r\n        onClose={handleClose}\r\n      >\r\n        <Alert onClose={handleClose} severity=\"error\">\r\n          {errorMessage}\r\n        </Alert>\r\n      </Snackbar>\r\n    </>\r\n  );\r\n};\r\nexport default SignUp;\r\n","import { useState } from \"react\";\r\nimport Login from \"../components/Login\";\r\nimport SignUp from \"../components/SignUp\";\r\nconst UnAuthRoute = () => {\r\n  const [openLogin, setOpenLogin] = useState(true);\r\n  return (\r\n    <>\r\n      {openLogin ? (\r\n        <Login openLogin={openLogin} setOpenLogin={setOpenLogin} />\r\n      ) : (\r\n        <SignUp openLogin={openLogin} setOpenLogin={setOpenLogin} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UnAuthRoute;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport AuthRoute from \"../Routes/AuthRoutes\";\r\nimport UnAuthRoute from \"../Routes/UnAuthRoutes\";\r\n\r\nconst HomeRoute = () => {\r\n  const { email } = useSelector((state) => state.login);\r\n  return (\r\n      <>{email ? <AuthRoute /> : <UnAuthRoute />}</>\r\n  );\r\n};\r\nexport default HomeRoute;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../components/Loader\";\r\nimport { checkVerified } from \"../redux/actions/actions\";\r\nimport HomeRoute from \"./HomeRoute\";\r\nconst Main = () => {\r\n  const { loading } = useSelector((state) => state.login);\r\n  const { email } = useSelector((state) => state.login);\r\n  const [login, setLogin] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const isLogin = () => {\r\n    if (localStorage.getItem(\"token\")) {\r\n      dispatch(\r\n        checkVerified({\r\n          token: localStorage.getItem(\"token\"),\r\n          email: localStorage.getItem(\"email\"),\r\n        })\r\n      );\r\n      if (email) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n      setLogin(isLogin());\r\n  }, []);\r\n  return <>{loading ? <Loader loading={loading} /> : <HomeRoute />}</>;\r\n};\r\nexport default Main;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\nimport Main from \"./pages/Main\";\r\nimport './App.css'\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <Router>\r\n        <Main />\r\n      </Router>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}